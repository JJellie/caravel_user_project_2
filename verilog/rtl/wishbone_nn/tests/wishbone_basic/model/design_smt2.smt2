; SMT-LIBv2 description generated by Yosys 0.45+139 (git sha1 4d581a97d, clang++ 14.0.0-1ubuntu1.1 -fPIC -O3)
; yosys-smt2-module fifo_buffer
(declare-sort |fifo_buffer_s| 0)
(declare-fun |fifo_buffer_is| (|fifo_buffer_s|) Bool)
; yosys-smt2-witness {"offset": 0, "path": ["\\write_addr"], "smtname": 0, "smtoffset": 0, "type": "reg", "width": 3}
(declare-fun |fifo_buffer#0| (|fifo_buffer_s|) (_ BitVec 3)) ; \write_addr
; yosys-smt2-register write_addr 3
; yosys-smt2-wire write_addr 3
(define-fun |fifo_buffer_n write_addr| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#0| state))
(declare-fun |fifo_buffer#1| (|fifo_buffer_s|) Bool) ; \we
; yosys-smt2-input we 1
; yosys-smt2-wire we 1
; yosys-smt2-witness {"offset": 0, "path": ["\\we"], "smtname": "we", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_buffer_n we| ((state |fifo_buffer_s|)) Bool (|fifo_buffer#1| state))
(declare-fun |fifo_buffer#2| (|fifo_buffer_s|) Bool) ; \rst
; yosys-smt2-input rst 1
; yosys-smt2-wire rst 1
; yosys-smt2-witness {"offset": 0, "path": ["\\rst"], "smtname": "rst", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_buffer_n rst| ((state |fifo_buffer_s|)) Bool (|fifo_buffer#2| state))
; yosys-smt2-witness {"offset": 0, "path": ["\\read_addr"], "smtname": 3, "smtoffset": 0, "type": "reg", "width": 3}
(declare-fun |fifo_buffer#3| (|fifo_buffer_s|) (_ BitVec 3)) ; \read_addr
; yosys-smt2-register read_addr 3
; yosys-smt2-wire read_addr 3
(define-fun |fifo_buffer_n read_addr| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#3| state))
; yosys-smt2-output full 1
; yosys-smt2-wire full 1
(define-fun |fifo_buffer_n full| ((state |fifo_buffer_s|)) Bool false)
; yosys-smt2-memory FIFO 3 32 1 1 sync
; yosys-smt2-witness {"path": ["\\FIFO"], "rom": false, "size": 8, "smtname": "FIFO", "statebv": false, "type": "mem", "uninitialized": [{"offset": 0, "width": 256}], "width": 32}
(declare-fun |fifo_buffer#4#0| (|fifo_buffer_s|) (Array (_ BitVec 3) (_ BitVec 32))) ; FIFO
(define-fun |fifo_buffer_m FIFO| ((state |fifo_buffer_s|)) (Array (_ BitVec 3) (_ BitVec 32)) (|fifo_buffer#4#0| state))
(define-fun |fifo_buffer_m:R0A FIFO| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#3| state)) ; \read_addr
(define-fun |fifo_buffer#5| ((state |fifo_buffer_s|)) (_ BitVec 32) (select (|fifo_buffer#4#0| state) (|fifo_buffer_m:R0A FIFO| state))) ; $memrd$\FIFO$input_fifo.sv:19$28_DATA
(define-fun |fifo_buffer_m:R0D FIFO| ((state |fifo_buffer_s|)) (_ BitVec 32) (|fifo_buffer#5| state))
(declare-fun |fifo_buffer#6| (|fifo_buffer_s|) (_ BitVec 1)) ; \ce
(define-fun |fifo_buffer#7| ((state |fifo_buffer_s|)) (_ BitVec 32) (ite (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1) (|fifo_buffer#5| state) #b00000000000000000000000000000000)) ; \data_o
; yosys-smt2-output data_o 32
; yosys-smt2-wire data_o 32
(define-fun |fifo_buffer_n data_o| ((state |fifo_buffer_s|)) (_ BitVec 32) (|fifo_buffer#7| state))
(declare-fun |fifo_buffer#8| (|fifo_buffer_s|) (_ BitVec 32)) ; \data_i
; yosys-smt2-input data_i 32
; yosys-smt2-wire data_i 32
; yosys-smt2-witness {"offset": 0, "path": ["\\data_i"], "smtname": "data_i", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |fifo_buffer_n data_i| ((state |fifo_buffer_s|)) (_ BitVec 32) (|fifo_buffer#8| state))
; yosys-smt2-anyinit fifo_buffer#9 3 input_fifo.sv:21.5-45.8
; yosys-smt2-witness {"offset": 0, "path": ["\\count"], "smtname": 9, "smtoffset": 0, "type": "init", "width": 3}
(declare-fun |fifo_buffer#9| (|fifo_buffer_s|) (_ BitVec 3)) ; \count
; yosys-smt2-register count 3
; yosys-smt2-wire count 3
(define-fun |fifo_buffer_n count| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#9| state))
(declare-fun |fifo_buffer#10| (|fifo_buffer_s|) Bool) ; \clk
; yosys-smt2-input clk 1
; yosys-smt2-wire clk 1
; yosys-smt2-clock clk posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\clk"], "smtname": "clk", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_buffer_n clk| ((state |fifo_buffer_s|)) Bool (|fifo_buffer#10| state))
; yosys-smt2-input ce 1
; yosys-smt2-wire ce 1
; yosys-smt2-witness {"offset": 0, "path": ["\\ce"], "smtname": "ce", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |fifo_buffer_n ce| ((state |fifo_buffer_s|)) Bool (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1))
; yosys-smt2-anyseq fifo_buffer#11 3 $auto$setundef.cc:533:execute$264
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_264"], "smtname": 11, "smtoffset": 0, "type": "seq", "width": 3}
(declare-fun |fifo_buffer#11| (|fifo_buffer_s|) (_ BitVec 3)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_264
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_264 3
(define-fun |fifo_buffer_n _witness_.anyseq_auto_setundef_cc_533_execute_264| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#11| state))
; yosys-smt2-anyseq fifo_buffer#12 32 $auto$setundef.cc:533:execute$262
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_262"], "smtname": 12, "smtoffset": 0, "type": "seq", "width": 32}
(declare-fun |fifo_buffer#12| (|fifo_buffer_s|) (_ BitVec 32)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_262
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_262 32
(define-fun |fifo_buffer_n _witness_.anyseq_auto_setundef_cc_533_execute_262| ((state |fifo_buffer_s|)) (_ BitVec 32) (|fifo_buffer#12| state))
; yosys-smt2-anyseq fifo_buffer#13 3 $auto$setundef.cc:533:execute$260
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_260"], "smtname": 13, "smtoffset": 0, "type": "seq", "width": 3}
(declare-fun |fifo_buffer#13| (|fifo_buffer_s|) (_ BitVec 3)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_260
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_260 3
(define-fun |fifo_buffer_n _witness_.anyseq_auto_setundef_cc_533_execute_260| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#13| state))
; yosys-smt2-anyseq fifo_buffer#14 32 $auto$setundef.cc:533:execute$258
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_258"], "smtname": 14, "smtoffset": 0, "type": "seq", "width": 32}
(declare-fun |fifo_buffer#14| (|fifo_buffer_s|) (_ BitVec 32)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_258
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_258 32
(define-fun |fifo_buffer_n _witness_.anyseq_auto_setundef_cc_533_execute_258| ((state |fifo_buffer_s|)) (_ BitVec 32) (|fifo_buffer#14| state))
; yosys-smt2-anyseq fifo_buffer#15 3 $auto$setundef.cc:533:execute$256
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_256"], "smtname": 15, "smtoffset": 0, "type": "seq", "width": 3}
(declare-fun |fifo_buffer#15| (|fifo_buffer_s|) (_ BitVec 3)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_256
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_256 3
(define-fun |fifo_buffer_n _witness_.anyseq_auto_setundef_cc_533_execute_256| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#15| state))
; yosys-smt2-anyseq fifo_buffer#16 32 $auto$setundef.cc:533:execute$254
; yosys-smt2-witness {"offset": 0, "path": ["\\_witness_", "\\anyseq_auto_setundef_cc_533_execute_254"], "smtname": 16, "smtoffset": 0, "type": "seq", "width": 32}
(declare-fun |fifo_buffer#16| (|fifo_buffer_s|) (_ BitVec 32)) ; \_witness_.anyseq_auto_setundef_cc_533_execute_254
; yosys-smt2-wire _witness_.anyseq_auto_setundef_cc_533_execute_254 32
(define-fun |fifo_buffer_n _witness_.anyseq_auto_setundef_cc_533_execute_254| ((state |fifo_buffer_s|)) (_ BitVec 32) (|fifo_buffer#16| state))
(define-fun |fifo_buffer#17| ((state |fifo_buffer_s|)) (_ BitVec 1) (bvnot (ite (|fifo_buffer#10| state) #b1 #b0))) ; $auto$rtlil.cc:2493:Not$270
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$271
(define-fun |fifo_buffer_u 0| ((state |fifo_buffer_s|)) Bool (or (= ((_ extract 0 0) (|fifo_buffer#17| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$271
(define-fun |fifo_buffer#18| ((state |fifo_buffer_s|)) (_ BitVec 3) (bvsub (|fifo_buffer#9| state) #b001)) ; $auto$wreduce.cc:461:run$179 [2:0]
(define-fun |fifo_buffer#19| ((state |fifo_buffer_s|)) Bool (not (or  (|fifo_buffer#1| state) false))) ; $logic_not$input_fifo.sv:33$47_Y
(define-fun |fifo_buffer#20| ((state |fifo_buffer_s|)) Bool (bvugt (|fifo_buffer#9| state) #b000)) ; $gt$input_fifo.sv:33$48_Y
(define-fun |fifo_buffer#21| ((state |fifo_buffer_s|)) Bool (and (or  (|fifo_buffer#19| state) false) (or  (|fifo_buffer#20| state) false))) ; $logic_and$input_fifo.sv:33$49_Y
(define-fun |fifo_buffer#22| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#21| state) (|fifo_buffer#18| state) (|fifo_buffer#9| state))) ; $4\count[2:0]
(define-fun |fifo_buffer#23| ((state |fifo_buffer_s|)) (_ BitVec 3) (bvadd (|fifo_buffer#9| state) #b001)) ; $add$input_fifo.sv:31$46_Y
(define-fun |fifo_buffer#24| ((state |fifo_buffer_s|)) Bool (bvule (concat #b0 (|fifo_buffer#9| state)) #b1000)) ; $le$input_fifo.sv:28$40_Y
(define-fun |fifo_buffer#25| ((state |fifo_buffer_s|)) Bool (and (or  (|fifo_buffer#1| state) false) (or  (|fifo_buffer#24| state) false))) ; $logic_and$input_fifo.sv:28$41_Y
(define-fun |fifo_buffer#26| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#25| state) (|fifo_buffer#23| state) (|fifo_buffer#22| state))) ; $3\count[2:0]
(define-fun |fifo_buffer#27| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1) (|fifo_buffer#26| state) (|fifo_buffer#9| state))) ; $2\count[2:0]
(define-fun |fifo_buffer#28| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#2| state) #b000 (|fifo_buffer#27| state))) ; $0\count[2:0]
(define-fun |fifo_buffer#29| ((state |fifo_buffer_s|)) (_ BitVec 3) (bvadd (|fifo_buffer#3| state) #b001)) ; $add$input_fifo.sv:34$50_Y
(define-fun |fifo_buffer#30| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#21| state) (|fifo_buffer#29| state) (|fifo_buffer#3| state))) ; $procmux$142_Y
(define-fun |fifo_buffer#31| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#25| state) (|fifo_buffer#3| state) (|fifo_buffer#30| state))) ; $procmux$145_Y
(define-fun |fifo_buffer#32| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1) (|fifo_buffer#31| state) (|fifo_buffer#3| state))) ; $procmux$147_Y
(define-fun |fifo_buffer#33| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#2| state) #b000 (|fifo_buffer#32| state))) ; $0\read_addr[2:0]
(define-fun |fifo_buffer#34| ((state |fifo_buffer_s|)) (_ BitVec 3) (bvadd (|fifo_buffer#0| state) #b001)) ; $add$input_fifo.sv:30$45_Y
(define-fun |fifo_buffer#35| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#25| state) (|fifo_buffer#34| state) (|fifo_buffer#0| state))) ; $procmux$156_Y
(define-fun |fifo_buffer#36| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1) (|fifo_buffer#35| state) (|fifo_buffer#0| state))) ; $procmux$158_Y
(define-fun |fifo_buffer#37| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#2| state) #b000 (|fifo_buffer#36| state))) ; $0\write_addr[2:0]
(define-fun |fifo_buffer#38| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#25| state) (|fifo_buffer#0| state) (|fifo_buffer#11| state))) ; $3$memwr$\FIFO$input_fifo.sv:29$25_ADDR[2:0]$42
(define-fun |fifo_buffer#39| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1) (|fifo_buffer#38| state) (|fifo_buffer#15| state))) ; $2$memwr$\FIFO$input_fifo.sv:29$25_ADDR[2:0]$37
(define-fun |fifo_buffer#40| ((state |fifo_buffer_s|)) (_ BitVec 3) (ite (|fifo_buffer#2| state) (|fifo_buffer#13| state) (|fifo_buffer#39| state))) ; $0$memwr$\FIFO$input_fifo.sv:29$25_ADDR[2:0]$31
(define-fun |fifo_buffer#41| ((state |fifo_buffer_s|)) (_ BitVec 32) (ite (|fifo_buffer#25| state) (|fifo_buffer#8| state) (|fifo_buffer#12| state))) ; $3$memwr$\FIFO$input_fifo.sv:29$25_DATA[31:0]$43
(define-fun |fifo_buffer#42| ((state |fifo_buffer_s|)) (_ BitVec 32) (ite (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1) (|fifo_buffer#41| state) (|fifo_buffer#16| state))) ; $2$memwr$\FIFO$input_fifo.sv:29$25_DATA[31:0]$38
(define-fun |fifo_buffer#43| ((state |fifo_buffer_s|)) (_ BitVec 32) (ite (|fifo_buffer#2| state) (|fifo_buffer#14| state) (|fifo_buffer#42| state))) ; $0$memwr$\FIFO$input_fifo.sv:29$25_DATA[31:0]$32
(define-fun |fifo_buffer#44| ((state |fifo_buffer_s|)) (_ BitVec 1) (ite (|fifo_buffer#25| state) #b1 #b0)) ; $3$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$44 [31]
(define-fun |fifo_buffer#45| ((state |fifo_buffer_s|)) (_ BitVec 1) (ite (= ((_ extract 0 0) (|fifo_buffer#6| state)) #b1) (|fifo_buffer#44| state) #b0)) ; $2$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$39 [31]
(define-fun |fifo_buffer#46| ((state |fifo_buffer_s|)) (_ BitVec 1) (ite (|fifo_buffer#2| state) #b0 (|fifo_buffer#45| state))) ; $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31]
(define-fun |fifo_buffer_m:W0A FIFO| ((state |fifo_buffer_s|)) (_ BitVec 3) (|fifo_buffer#40| state)) ; $0$memwr$\FIFO$input_fifo.sv:29$25_ADDR[2:0]$31
(define-fun |fifo_buffer_m:W0D FIFO| ((state |fifo_buffer_s|)) (_ BitVec 32) (|fifo_buffer#43| state)) ; $0$memwr$\FIFO$input_fifo.sv:29$25_DATA[31:0]$32
(define-fun |fifo_buffer_m:W0M FIFO| ((state |fifo_buffer_s|)) (_ BitVec 32) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (concat (|fifo_buffer#46| state) (|fifo_buffer#46| state))))))))))))))))))))))))))))))))) ; { $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] $0$memwr$\FIFO$input_fifo.sv:29$25_EN[31:0]$33 [31] }
(define-fun |fifo_buffer#4#1| ((state |fifo_buffer_s|)) (Array (_ BitVec 3) (_ BitVec 32)) (ite (= (|fifo_buffer_m:W0M FIFO| state) #b00000000000000000000000000000000) (|fifo_buffer#4#0| state) (store (|fifo_buffer#4#0| state) (|fifo_buffer_m:W0A FIFO| state) (bvor (bvand (|fifo_buffer_m:W0D FIFO| state) (|fifo_buffer_m:W0M FIFO| state)) (bvand (select (|fifo_buffer#4#0| state) (|fifo_buffer_m:W0A FIFO| state)) (bvnot (|fifo_buffer_m:W0M FIFO| state))))))) ; FIFO
(define-fun |fifo_buffer_a| ((state |fifo_buffer_s|)) Bool true)
(define-fun |fifo_buffer_u| ((state |fifo_buffer_s|)) Bool 
  (|fifo_buffer_u 0| state)
)
(define-fun |fifo_buffer_i| ((state |fifo_buffer_s|)) Bool (and
  (= (|fifo_buffer#0| state) #b000) ; write_addr
  (= (|fifo_buffer#3| state) #b000) ; read_addr
))
(define-fun |fifo_buffer_h| ((state |fifo_buffer_s|)) Bool true)
(define-fun |fifo_buffer_t| ((state |fifo_buffer_s|) (next_state |fifo_buffer_s|)) Bool (and
  (= (|fifo_buffer#28| state) (|fifo_buffer#9| next_state)) ; $procdff$169 \count
  (= (|fifo_buffer#33| state) (|fifo_buffer#3| next_state)) ; $procdff$171 \read_addr
  (= (|fifo_buffer#37| state) (|fifo_buffer#0| next_state)) ; $procdff$170 \write_addr
  (= (|fifo_buffer#4#1| state) (|fifo_buffer#4#0| next_state)) ; FIFO
)) ; end of module fifo_buffer
; yosys-smt2-module wishbone_nn
(declare-sort |wishbone_nn_s| 0)
(declare-fun |wishbone_nn_is| (|wishbone_nn_s|) Bool)
(declare-fun |wishbone_nn#0| (|wishbone_nn_s|) Bool) ; \wbs_we_i
; yosys-smt2-input wbs_we_i 1
; yosys-smt2-wire wbs_we_i 1
; yosys-smt2-witness {"offset": 0, "path": ["\\wbs_we_i"], "smtname": "wbs_we_i", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wishbone_nn_n wbs_we_i| ((state |wishbone_nn_s|)) Bool (|wishbone_nn#0| state))
(declare-fun |wishbone_nn#1| (|wishbone_nn_s|) Bool) ; \wbs_stb_i
; yosys-smt2-input wbs_stb_i 1
; yosys-smt2-wire wbs_stb_i 1
; yosys-smt2-witness {"offset": 0, "path": ["\\wbs_stb_i"], "smtname": "wbs_stb_i", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wishbone_nn_n wbs_stb_i| ((state |wishbone_nn_s|)) Bool (|wishbone_nn#1| state))
(declare-fun |wishbone_nn#2| (|wishbone_nn_s|) (_ BitVec 4)) ; \wbs_sel_i
; yosys-smt2-input wbs_sel_i 4
; yosys-smt2-wire wbs_sel_i 4
; yosys-smt2-witness {"offset": 0, "path": ["\\wbs_sel_i"], "smtname": "wbs_sel_i", "smtoffset": 0, "type": "input", "width": 4}
(define-fun |wishbone_nn_n wbs_sel_i| ((state |wishbone_nn_s|)) (_ BitVec 4) (|wishbone_nn#2| state))
; yosys-smt2-cell fifo_buffer fifo_in
; yosys-smt2-witness {"path": ["\\fifo_in"], "smtname": "fifo_in", "type": "cell"}
(declare-fun |wishbone_nn#3| (|wishbone_nn_s|) Bool) ; \full
(declare-fun |wishbone_nn#4| (|wishbone_nn_s|) (_ BitVec 32)) ; \fifo_out
(declare-fun |wishbone_nn_h fifo_in| (|wishbone_nn_s|) |fifo_buffer_s|)
(declare-fun |wishbone_nn#5| (|wishbone_nn_s|) (_ BitVec 32)) ; \wbs_adr_i
(define-fun |wishbone_nn#6| ((state |wishbone_nn_s|)) Bool (= (|wishbone_nn#5| state) #b00110000000000000000000000000000)) ; $eq$top_level.sv:40$4_Y
(define-fun |wishbone_nn#7| ((state |wishbone_nn_s|)) Bool (not (or  (|wishbone_nn#0| state) false))) ; $logic_not$top_level.sv:41$10_Y
(define-fun |wishbone_nn#8| ((state |wishbone_nn_s|)) Bool (and (or  (|wishbone_nn#6| state) false) (or  (|wishbone_nn#7| state) false))) ; $logic_and$top_level.sv:41$11_Y
(declare-fun |wishbone_nn#9| (|wishbone_nn_s|) Bool) ; \wb_rst_i
(define-fun |wishbone_nn#10| ((state |wishbone_nn_s|)) Bool (not (or  (|wishbone_nn#9| state) false))) ; $logic_not$top_level.sv:40$2_Y
(define-fun |wishbone_nn#11| ((state |wishbone_nn_s|)) Bool (and (or  (|wishbone_nn#8| state) false) (or  (|wishbone_nn#10| state) false))) ; $logic_and$top_level.sv:41$13_Y
(define-fun |wishbone_nn#12| ((state |wishbone_nn_s|)) (_ BitVec 32) (ite (|wishbone_nn#11| state) (|wishbone_nn#4| state) #b00000000000000000000000000000000)) ; \wbs_dat_o
; yosys-smt2-output wbs_dat_o 32
; yosys-smt2-wire wbs_dat_o 32
(define-fun |wishbone_nn_n wbs_dat_o| ((state |wishbone_nn_s|)) (_ BitVec 32) (|wishbone_nn#12| state))
(declare-fun |wishbone_nn#13| (|wishbone_nn_s|) (_ BitVec 32)) ; \wbs_dat_i
; yosys-smt2-input wbs_dat_i 32
; yosys-smt2-wire wbs_dat_i 32
; yosys-smt2-witness {"offset": 0, "path": ["\\wbs_dat_i"], "smtname": "wbs_dat_i", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |wishbone_nn_n wbs_dat_i| ((state |wishbone_nn_s|)) (_ BitVec 32) (|wishbone_nn#13| state))
(declare-fun |wishbone_nn#14| (|wishbone_nn_s|) Bool) ; \wbs_cyc_i
; yosys-smt2-input wbs_cyc_i 1
; yosys-smt2-wire wbs_cyc_i 1
; yosys-smt2-witness {"offset": 0, "path": ["\\wbs_cyc_i"], "smtname": "wbs_cyc_i", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wishbone_nn_n wbs_cyc_i| ((state |wishbone_nn_s|)) Bool (|wishbone_nn#14| state))
; yosys-smt2-input wbs_adr_i 32
; yosys-smt2-wire wbs_adr_i 32
; yosys-smt2-witness {"offset": 0, "path": ["\\wbs_adr_i"], "smtname": "wbs_adr_i", "smtoffset": 0, "type": "input", "width": 32}
(define-fun |wishbone_nn_n wbs_adr_i| ((state |wishbone_nn_s|)) (_ BitVec 32) (|wishbone_nn#5| state))
(define-fun |wishbone_nn#15| ((state |wishbone_nn_s|)) Bool (and (or  (|wishbone_nn#1| state) false) (or  (|wishbone_nn#14| state) false))) ; $logic_and$top_level.sv:40$1_Y
(define-fun |wishbone_nn#16| ((state |wishbone_nn_s|)) Bool (and (or  (|wishbone_nn#15| state) false) (or  (|wishbone_nn#10| state) false))) ; $logic_and$top_level.sv:40$3_Y
(define-fun |wishbone_nn#17| ((state |wishbone_nn_s|)) Bool (= (|wishbone_nn#5| state) #b00110000000000000000000000000001)) ; $eq$top_level.sv:40$5_Y
(define-fun |wishbone_nn#18| ((state |wishbone_nn_s|)) Bool (or  (|wishbone_nn#6| state) false  (|wishbone_nn#17| state) false)) ; $logic_or$top_level.sv:40$6_Y
(define-fun |wishbone_nn#19| ((state |wishbone_nn_s|)) Bool (and (or  (|wishbone_nn#16| state) false) (or  (|wishbone_nn#18| state) false))) ; $logic_and$top_level.sv:40$7_Y
(define-fun |wishbone_nn#20| ((state |wishbone_nn_s|)) (_ BitVec 1) (ite (|wishbone_nn#19| state) #b1 #b0)) ; \wbs_ack_o
; yosys-smt2-output wbs_ack_o 1
; yosys-smt2-wire wbs_ack_o 1
(define-fun |wishbone_nn_n wbs_ack_o| ((state |wishbone_nn_s|)) Bool (= ((_ extract 0 0) (|wishbone_nn#20| state)) #b1))
; yosys-smt2-input wb_rst_i 1
; yosys-smt2-wire wb_rst_i 1
; yosys-smt2-witness {"offset": 0, "path": ["\\wb_rst_i"], "smtname": "wb_rst_i", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wishbone_nn_n wb_rst_i| ((state |wishbone_nn_s|)) Bool (|wishbone_nn#9| state))
(declare-fun |wishbone_nn#21| (|wishbone_nn_s|) Bool) ; \wb_clk_i
; yosys-smt2-input wb_clk_i 1
; yosys-smt2-wire wb_clk_i 1
; yosys-smt2-clock wb_clk_i posedge
; yosys-smt2-witness {"offset": 0, "path": ["\\wb_clk_i"], "smtname": "wb_clk_i", "smtoffset": 0, "type": "posedge", "width": 1}
; yosys-smt2-witness {"offset": 0, "path": ["\\wb_clk_i"], "smtname": "wb_clk_i", "smtoffset": 0, "type": "input", "width": 1}
(define-fun |wishbone_nn_n wb_clk_i| ((state |wishbone_nn_s|)) Bool (|wishbone_nn#21| state))
; yosys-smt2-wire full 1
(define-fun |wishbone_nn_n full| ((state |wishbone_nn_s|)) Bool (|wishbone_nn#3| state))
; yosys-smt2-wire fifo_out 32
(define-fun |wishbone_nn_n fifo_out| ((state |wishbone_nn_s|)) (_ BitVec 32) (|wishbone_nn#4| state))
(define-fun |wishbone_nn#22| ((state |wishbone_nn_s|)) (_ BitVec 1) (ite (|wishbone_nn#9| state) #b0 #b1)) ; \a_ack_only_when_addr_EN
; yosys-smt2-wire a_ack_only_when_stb_and_cyc_EN 1
(define-fun |wishbone_nn_n a_ack_only_when_stb_and_cyc_EN| ((state |wishbone_nn_s|)) Bool (= ((_ extract 0 0) (|wishbone_nn#22| state)) #b1))
; yosys-smt2-wire a_ack_only_when_addr_EN 1
(define-fun |wishbone_nn_n a_ack_only_when_addr_EN| ((state |wishbone_nn_s|)) Bool (= ((_ extract 0 0) (|wishbone_nn#22| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$190"], "smtname": 23, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wishbone_nn#23| (|wishbone_nn_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$190
; yosys-smt2-register $auto$async2sync.cc:110:execute$190 1
(define-fun |wishbone_nn_n $auto$async2sync.cc:110:execute$190| ((state |wishbone_nn_s|)) Bool (= ((_ extract 0 0) (|wishbone_nn#23| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:110:execute$184"], "smtname": 24, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wishbone_nn#24| (|wishbone_nn_s|) (_ BitVec 1)) ; $auto$async2sync.cc:110:execute$184
; yosys-smt2-register $auto$async2sync.cc:110:execute$184 1
(define-fun |wishbone_nn_n $auto$async2sync.cc:110:execute$184| ((state |wishbone_nn_s|)) Bool (= ((_ extract 0 0) (|wishbone_nn#24| state)) #b1))
; yosys-smt2-witness {"offset": 0, "path": ["$auto$async2sync.cc:101:execute$180"], "smtname": 25, "smtoffset": 0, "type": "reg", "width": 1}
(declare-fun |wishbone_nn#25| (|wishbone_nn_s|) (_ BitVec 1)) ; $auto$async2sync.cc:101:execute$180
; yosys-smt2-register $auto$async2sync.cc:101:execute$180 1
(define-fun |wishbone_nn_n $auto$async2sync.cc:101:execute$180| ((state |wishbone_nn_s|)) Bool (= ((_ extract 0 0) (|wishbone_nn#25| state)) #b1))
(define-fun |wishbone_nn#26| ((state |wishbone_nn_s|)) (_ BitVec 1) (bvnot (ite (|wishbone_nn#21| state) #b1 #b0))) ; $auto$rtlil.cc:2493:Not$267
; yosys-smt2-assume 0 $auto$formalff.cc:758:execute$268
(define-fun |wishbone_nn_u 0| ((state |wishbone_nn_s|)) Bool (or (= ((_ extract 0 0) (|wishbone_nn#26| state)) #b1) (not true))) ; $auto$formalff.cc:758:execute$268
; yosys-smt2-assert 0 a_ack_only_when_stb_and_cyc
(define-fun |wishbone_nn_a 0| ((state |wishbone_nn_s|)) Bool (or (= ((_ extract 0 0) (|wishbone_nn#24| state)) #b1) (not (= ((_ extract 0 0) (|wishbone_nn#25| state)) #b1)))) ; a_ack_only_when_stb_and_cyc
; yosys-smt2-assert 1 a_ack_only_when_addr
(define-fun |wishbone_nn_a 1| ((state |wishbone_nn_s|)) Bool (or (= ((_ extract 0 0) (|wishbone_nn#23| state)) #b1) (not (= ((_ extract 0 0) (|wishbone_nn#25| state)) #b1)))) ; a_ack_only_when_addr
(define-fun |wishbone_nn#27| ((state |wishbone_nn_s|)) Bool (not (or  (= ((_ extract 0 0) (|wishbone_nn#20| state)) #b1) false))) ; $logic_not$top_level.sv:47$17_Y
(define-fun |wishbone_nn#28| ((state |wishbone_nn_s|)) Bool (or  (|wishbone_nn#27| state) false  (|wishbone_nn#15| state) false)) ; $logic_or$top_level.sv:47$19_Y
(define-fun |wishbone_nn#29| ((state |wishbone_nn_s|)) Bool (or  (|wishbone_nn#27| state) false  (|wishbone_nn#18| state) false)) ; $logic_or$top_level.sv:48$24_Y
(define-fun |wishbone_nn_a| ((state |wishbone_nn_s|)) Bool (and
  (|wishbone_nn_a 0| state)
  (|wishbone_nn_a 1| state)
  (|fifo_buffer_a| (|wishbone_nn_h fifo_in| state))
))
(define-fun |wishbone_nn_u| ((state |wishbone_nn_s|)) Bool (and
  (|wishbone_nn_u 0| state)
  (|fifo_buffer_u| (|wishbone_nn_h fifo_in| state))
))
(define-fun |wishbone_nn_i| ((state |wishbone_nn_s|)) Bool (and
  (= (= ((_ extract 0 0) (|wishbone_nn#23| state)) #b1) true) ; $auto$async2sync.cc:110:execute$190
  (= (= ((_ extract 0 0) (|wishbone_nn#24| state)) #b1) true) ; $auto$async2sync.cc:110:execute$184
  (= (= ((_ extract 0 0) (|wishbone_nn#25| state)) #b1) false) ; $auto$async2sync.cc:101:execute$180
  (|fifo_buffer_i| (|wishbone_nn_h fifo_in| state))
))
(define-fun |wishbone_nn_h| ((state |wishbone_nn_s|)) Bool (and
  (= (|wishbone_nn_is| state) (|fifo_buffer_is| (|wishbone_nn_h fifo_in| state)))
  (= (|wishbone_nn#0| state) (|fifo_buffer_n we| (|wishbone_nn_h fifo_in| state))) ; fifo_buffer.we
  (= (|wishbone_nn#9| state) (|fifo_buffer_n rst| (|wishbone_nn_h fifo_in| state))) ; fifo_buffer.rst
  (= (|wishbone_nn#3| state) (|fifo_buffer_n full| (|wishbone_nn_h fifo_in| state))) ; fifo_buffer.full
  (= (|wishbone_nn#4| state) (|fifo_buffer_n data_o| (|wishbone_nn_h fifo_in| state))) ; fifo_buffer.data_o
  (= (|wishbone_nn#13| state) (|fifo_buffer_n data_i| (|wishbone_nn_h fifo_in| state))) ; fifo_buffer.data_i
  (= (|wishbone_nn#21| state) (|fifo_buffer_n clk| (|wishbone_nn_h fifo_in| state))) ; fifo_buffer.clk
  (= (|wishbone_nn#1| state) (|fifo_buffer_n ce| (|wishbone_nn_h fifo_in| state))) ; fifo_buffer.ce
  (|fifo_buffer_h| (|wishbone_nn_h fifo_in| state))
))
(define-fun |wishbone_nn_t| ((state |wishbone_nn_s|) (next_state |wishbone_nn_s|)) Bool (and
  (= (|wishbone_nn#22| state) (|wishbone_nn#25| next_state)) ; $auto$async2sync.cc:104:execute$182 $auto$async2sync.cc:101:execute$180
  (= (ite (|wishbone_nn#28| state) #b1 #b0) (|wishbone_nn#24| next_state)) ; $auto$async2sync.cc:112:execute$185 $auto$async2sync.cc:110:execute$184
  (= (ite (|wishbone_nn#29| state) #b1 #b0) (|wishbone_nn#23| next_state)) ; $auto$async2sync.cc:112:execute$191 $auto$async2sync.cc:110:execute$190
  (|fifo_buffer_t| (|wishbone_nn_h fifo_in| state) (|wishbone_nn_h fifo_in| next_state))
)) ; end of module wishbone_nn
; yosys-smt2-topmod wishbone_nn
; end of yosys output
